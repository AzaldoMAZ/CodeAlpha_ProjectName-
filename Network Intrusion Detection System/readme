# Suricata IDS Laboratory Setup

## Overview

This project demonstrates a complete Intrusion Detection System (IDS) implementation using Suricata on Windows. The lab includes sensor installation, rule configuration, live traffic capture, and comprehensive analysis with automated reporting capabilities.

## Architecture

```
┌─────────────────┐    ┌──────────────────┐    ┌─────────────────┐
│   Wi-Fi Traffic │───▶│ Npcap + Suricata │───▶│ JSON Log Parser │
└─────────────────┘    └──────────────────┘    └─────────────────┘
                                │                        │
                                ▼                        ▼
                       ┌─────────────────┐    ┌─────────────────┐
                       │ Real-time Alerts│    │ HTML Reports    │
                       │ (eve.json)      │    │ & Statistics    │
                       └─────────────────┘    └─────────────────┘
```

## Components

### Core Systems
- **Npcap**: Packet capture driver (WinPcap compatible mode)
- **Suricata**: Open-source IDS/IPS engine
- **ET Open Rules**: Emerging Threats community ruleset
- **Custom Detection Rules**: Laboratory-specific signatures

### Laboratory Structure
```
suricata-lab/
├── suricata.yaml           # Main configuration file
├── suricata.rules          # Merged ET Open + local rules
├── local.rules             # Custom detection signatures
├── logs/
│   ├── eve.json           # Primary event log
│   ├── suricata.log       # Engine operational log
│   └── fast.log           # Alert summary log
├── exports/
│   ├── summary.txt        # Event statistics
│   ├── report.txt         # Technical analysis
│   ├── alerts_sample.json # Sample alert data
│   └── suricata_report.html # Formatted report
└── README.md              # This documentation
```

## Installation & Setup

### Prerequisites
1. **Windows 10/11** with Administrator privileges
2. **PowerShell** (Admin mode required)
3. **Internet connection** for rule downloads

### Quick Start Commands

#### 1. Environment Setup
```powershell
# Navigate to Desktop and create lab structure
cd $env:USERPROFILE\Desktop
mkdir suricata-lab -Force; cd suricata-lab
```

#### 2. Rule Configuration
```powershell
# Download and extract ET Open rules
Invoke-WebRequest -Uri "https://rules.emergingthreats.net/open/suricata-7.0/emerging.rules.tar.gz" -OutFile et-open.tar.gz
tar -xzf et-open.tar.gz

# Merge rules into single file
Get-ChildItem .\rules\ *.rules | Get-Content | Set-Content .\suricata.rules
mkdir logs -Force
```

#### 3. Custom Signature Development
```powershell
# Create local detection rules
@'
alert icmp any any -> any any (msg:"Lab: ICMP Echo request"; itype:8; sid:4200001; rev:1;)
alert dns any any -> any 53 (msg:"Lab: DNS query .com"; dns_query; content:".com"; endswith; nocase; sid:4200002; rev:1;)
'@ | Set-Content .\local.rules -Encoding ASCII

# Integrate custom rules
Get-Content .\local.rules | Add-Content .\suricata.rules
```

#### 4. Live Traffic Capture
```powershell
# Auto-detect Wi-Fi interface and start monitoring
$exe = Get-ChildItem "C:\Program Files","C:\Program Files (x86)" -Recurse -Filter suricata.exe -ErrorAction SilentlyContinue | Select-Object -First 1 -ExpandProperty FullName
$ip = (Get-NetIPAddress -AddressFamily IPv4 | Where-Object { $_.InterfaceAlias -match 'Wi-Fi' } | Select-Object -First 1 -ExpandProperty IPAddress)
& $exe -c $PWD\suricata.yaml -s $PWD\suricata.rules -i $ip --logdir=$PWD\logs -v
```

#### 5. Traffic Generation & Validation
```powershell
# Generate test traffic (new PowerShell window)
ping 1.1.1.1 -n 2
nslookup example.com 8.8.8.8
Get-Content $env:USERPROFILE\Desktop\suricata-lab\logs\eve.json -Wait
```

## Analysis & Reporting

### Automated Statistics Generation
```powershell
# Parse eve.json and generate comprehensive reports
$log="$env:USERPROFILE\Desktop\suricata-lab\logs\eve.json"
$events = foreach($l in Get-Content $log){ try { $l|ConvertFrom-Json } catch {} }

# Event type analysis
$events | Group-Object event_type | Sort-Object Count -Desc | Select -First 5 | ForEach-Object { "- $($_.Name): $($_.Count)" } | Add-Content "$lab\summary.txt"

# Network traffic patterns
$events | Where-Object dest_ip | Group-Object dest_ip | Sort-Object Count -Desc | Select -First 5 | ForEach-Object { "- $($_.Name): $($_.Count)" } | Add-Content "$lab\report.txt"

# Alert extraction and analysis
$alerts | Select -First 10 | ForEach-Object { "$($_.alert.signature) | $($._src_ip) -> $($._dest_ip)" } | Add-Content "$lab\report.txt"
```

### Report Outputs
- **summary.txt**: Event type distributions and counts
- **report.txt**: Technical analysis with top alerts and destinations  
- **alerts_sample.json**: First 50 alerts for detailed review
- **suricata_report.html**: Professional formatted report (PDF-ready)

## Key Features Demonstrated

### 1. **Multi-layered Detection**
- Network flow monitoring
- DNS query analysis  
- TLS/SSL inspection
- HTTP transaction logging
- Custom signature matching

### 2. **Real-time Processing**
- Live packet capture on Wi-Fi interface
- Immediate alert generation
- Continuous JSON event streaming
- Performance monitoring

### 3. **Comprehensive Logging**
- **eve.json**: Structured event data (primary)
- **fast.log**: Quick alert summaries
- **suricata.log**: Engine diagnostics

### 4. **Professional Reporting**
- Statistical analysis of network patterns
- Top talkers and destinations identification
- Alert prioritization and sampling
- Export packaging for submission

## Troubleshooting

### Common Issues

| Issue | Solution |
|-------|----------|
| No interfaces listed | Run PowerShell as Administrator |
| Npcap not found | Install in WinPcap compatible mode |
| Rule path errors | Use single merged rules file with `-s` |
| Permission denied | Close other capture tools (Wireshark) |

### Validation Commands
```powershell
# Verify Suricata installation
suricata --build-info

# Test rule syntax
suricata -T -c suricata.yaml -S local.rules

# Check interface availability  
suricata --list-interfaces
```

## Results Summary

This laboratory successfully demonstrates:
- ✅ Complete IDS deployment on Windows
- ✅ Custom signature development and testing
- ✅ Live traffic analysis with 2 confirmed detections
- ✅ Professional documentation and reporting
- ✅ Automated log processing and statistics generation

## Legal & Compliance

**⚠️ Important**: Monitor only networks you own or have explicit permission to analyze.

## Technical Specifications

- **Platform**: Windows 10/11
- **Engine**: Suricata 7.0+ 
- **Rules**: ET Open + Custom signatures
- **Capture**: Npcap driver
- **Output**: JSON structured logging
- **Analysis**: PowerShell automation

## License

MIT License - Educational and research purposes.

---

**Lab Status**: ✅ Complete | **Alerts Generated**: 2+ | **Traffic Analyzed**: Wi-Fi interface | **Documentation**: Professional grade
